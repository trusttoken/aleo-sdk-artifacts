{"version":3,"file":"worker.js","sources":["../src/worker.ts"],"sourcesContent":["import {initThreadPool, ProgramManager, PrivateKey, verifyFunctionExecution, FunctionKeyPair} from \"./index\";\nimport { AleoKeyProvider, AleoKeyProviderParams} from \"./function-key-provider\";\nimport { expose } from \"comlink\";\n\nawait initThreadPool();\n\nconst defaultHost = \"https://api.explorer.aleo.org/v1\";\nconst keyProvider = new AleoKeyProvider();\nconst programManager = new ProgramManager(\n    defaultHost,\n    keyProvider,\n    undefined\n);\n\nkeyProvider.useCache(true);\n\nlet lastLocalProgram: string = \"\";\n\nexport interface WorkerAPI {\n    executeOffline: (\n        localProgram: string,\n        aleoFunction: string,\n        inputs: string[],\n        privateKey: string\n    ) => Promise<{ outputs: any; execution: string } | string>;\n\n    getPrivateKey: () => Promise<PrivateKey>;\n}\nasync function executeOffline(\n    localProgram: string,\n    aleoFunction: string,\n    inputs: string[],\n    privateKey: string,\n    proveExecution = false\n) {\n    console.log(\"Web worker: Executing function locally...\");\n    const startTime = performance.now();\n\n    try {\n        // Ensure the program is valid and that it contains the function specified\n        const program = programManager.createProgramFromSource(localProgram);\n        if (program instanceof Error) {\n            throw \"Error creating program from source\";\n        }\n        const program_id = program.id();\n        if (!program.hasFunction(aleoFunction)) {\n            throw `Program ${program_id} does not contain function ${aleoFunction}`;\n        }\n        const cacheKey = `${program_id}:${aleoFunction}`;\n\n        // Get the program imports\n        const imports = await programManager.networkClient.getProgramImports(\n            localProgram\n        );\n\n        if (imports instanceof Error) {\n            throw \"Error getting program imports\";\n        }\n        // Get the proving and verifying keys for the function\n        if (lastLocalProgram !== localProgram) {\n            const keys = <FunctionKeyPair>await programManager.synthesizeKeys(\n                localProgram,\n                aleoFunction,\n                inputs,\n                PrivateKey.from_string(privateKey)\n            );\n            programManager.keyProvider.cacheKeys(cacheKey, keys);\n            lastLocalProgram = localProgram;\n        }\n\n        // Pass the cache key to the execute function\n        const keyParams = new AleoKeyProviderParams({\n            cacheKey: cacheKey,\n        });\n\n        // Execute the function locally\n        const response = await programManager.run(\n            localProgram,\n            aleoFunction,\n            inputs,\n            proveExecution,\n            imports,\n            keyParams,\n            undefined,\n            undefined,\n            PrivateKey.from_string(privateKey),\n        );\n\n        // Return the outputs to the main thread\n        console.log(\n            `Web worker: Local execution completed in ${\n                performance.now() - startTime\n            } ms`\n        );\n        const outputs = response.getOutputs();\n        const execution = response.getExecution();\n        let executionString = \"\";\n\n        const keys = keyProvider.getKeys(cacheKey);\n\n        if (keys instanceof Error) {\n            throw \"Could not get verifying key\";\n        }\n\n        const verifyingKey = keys[1];\n\n        if (execution) {\n            verifyFunctionExecution(\n                execution,\n                verifyingKey,\n                program,\n                \"hello\"\n            );\n            executionString = execution.toString();\n            console.log(\"Execution verified successfully: \" + execution);\n        } else {\n            executionString = \"\";\n        }\n\n        console.log(`Function execution response: ${outputs}`);\n\n        return { outputs: outputs, execution: executionString };\n    } catch (error) {\n        console.error(error);\n        return error ? error.toString() : \"Unknown error\";\n    }\n}\n\nasync function getPrivateKey() {\n    const privateKey = new PrivateKey();\n    return privateKey.to_string();\n}\n\nconst workerAPI = { executeOffline, getPrivateKey };\nexpose(workerAPI);\n"],"names":[],"mappings":"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"}